{
  "hash": "b11b09f3a93fd7fbe33c1509d7bd1efb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Misleading data visualizations\nsubtitle: \"{{< fa book-open >}} Data science ethics <br>{{< fa book >}} Data Science with R\"\nformat: live-html\nengine: knitr\nbibliography: reference.bib\nwebr:\n  packages: \n    - tidyverse\n    - scales\n    - ggridges\n  cell-options:\n    autorun: false\n  resources:\n    - https://raw.githubusercontent.com/data-science-with-r/data-science-ethics/refs/heads/main/exercises/data/kansas-covid.csv\n    - https://raw.githubusercontent.com/data-science-with-r/data-science-ethics/refs/heads/main/exercises/data/georgia-covid.csv\n---\n\n\n<!-- begin: webr fodder -->\n\n::: {.cell}\n\n:::\n\n\n::: {.cell edit='false'}\n```{webr}\n#| edit: false\n#| echo: false\n#| output: false\noptions(\"readr.edition\" = 1)\nkansas_covid <- read_csv(\"kansas-covid.csv\")\ngeorgia_covid <- read_csv(\"georgia-covid.csv\")\n```\n:::\n\n\n<!-- end: webr fodder -->\n\n# Getting Started\n\nProgramming exercises are designed to provide an opportunity for you to put what you learn in the videos and readings.\nThese exercises feature interactive code cells which allow you to write, edit, and run R code without leaving your browser.\n\nWhen the ▶️ Run Code button turns to a solid color (with no flashing bubble indicating that the document is still loading), you can interact with the code cells!\n\nWe invite you to think critically about the ethics questions associated with each graph before opening the solution box so you get the most out of this exercise.\n\n## Packages\n\nWe’ll use the **tidyverse** and **scales** packages to create and improve plots in this programming exercise.\nThese are already installed for you to use in this programming exercise, run the following code cell to load these packages.\n\n\n::: {.cell}\n```{webr}\n#| label: load-packages\nlibrary(tidyverse)\nlibrary(scales)\n```\n:::\n\n\n## Motivation\n\nData visualization is a powerful tool used to help a general audience synthesize complex data into a message that is understandable.\nHowever, data visualizations that are intentionally or unintentionally misleading can lead an audience to conclusions that are nothing more than fabrications of the truth.\n\nIn this programming exercise, we are going to visit data from the COVID-19 pandemic, and work through two different data visualizations, identifying why they are misleading, and how they can be improved.\n\n# COVID-19 in Kansas\n\n*\"On August 6, 2020, Rachel Maddow of MSNBC tweeted “Chart: Kansas mask counties versus no-mask mandate counties” (Maddow 2020, August 6) along with a link to a plot (see figure below) created by the Kansas Department of Health and Environment—which was also shared live on The Rachel Maddow Show that same day. The plot compared the number of COVID-19 cases over time for counties in Kansas that had mask mandates versus those that did not\"* [@engledowl2021]\n\n![](images/masks-v-nomasks.png)\n\n:::: exercise\nWhat is misleading about this graph?\nWhy might it be misleading?\n\n::: {.callout-tip collapse=\"true\"}\n## Suggested answer\n\nThere are two different y-axes.\nOne on the left for the counties with the mask mandate, and one on the right for the counties without a mask mandate.\nThis may be misleading, as someone may not see the additional y-axis on the right side of the graph; line graphs typically do not have two different y-axes.\n:::\n::::\n\n:::: exercise\nWhat trend in these data might someone conclude because of the misleading visualization?\n\n::: {.callout-tip collapse=\"true\"}\n## Suggested answer\n\nBased on the misleading visualization, one could come to the conclusion that, the Kansas COVID-19 7 day rolling averages per/100k between the dates of 7/12/2020 through 8/03/2020 decreased to a lower value for masked counties than for counties that did not have the mask mandate\n:::\n::::\n\n## Improving the visualization\n\nNow that we have identified how this visualization is misleading, let's create our own visualization that addresses the issue!\n\nThe data used to create the data visualization can be read in (to be used later) viewed by running the following code.\n\n\n::: {.cell}\n```{webr}\n#| label: load-kansas-data\nkansas_covid <- read_csv(\"kansas-covid.csv\")\n\nkansas_covid\n```\n:::\n\n\nFirst, we need to think about the structure of our data.\nAs seen above, the three variables in the data are `date`, `mask mandate`, and `no-mask mandate`.\n\n:::: exercise\nHow do the structure of these data need to change in order for us to plot these data?\n\n::: {.callout-tip collapse=\"true\"}\n## Solution\n\nThe values of mask mandate and no-mask mandate need to be levels of a categorical variable that we can map to a visual element (lines) on our plot.\n:::\n::::\n\nNow let's do this!\n\n::: exercise\nReshape the data so that it's longer with three columns: `date`, `mandate`, and `cases`.\nSave the resulting data frame as `kansas_covid_longer`.\n\n\n::: {.cell exercise='ex_1'}\n```{webr}\n#| exercise: ex_1\nkansas_covid_longer <- kansas_covid |>\n  # add code here\n\nkansas_covid_longer\n```\n:::\n\n\n::: { .hint exercise=\"ex_1\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 1\n\nConsider using the `pivot_longer()` function:\n\n```r\nkansas_covid_longer <- kansas_covid |>\n  pivot_longer(\n    cols = ___,\n    names_to = ___,\n    values_to = ___\n  )\n```\n:::\n:::\n\n::: { .hint exercise=\"ex_1\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 2\n\nWe want to pivot all columns but the `date` column:\n\n```r\nkansas_covid_longer <- kansas_covid |>\n  pivot_longer(\n    cols = !date,\n    names_to = ___,\n    values_to = ___\n  )\n```\n:::\n:::\n\n::: { .hint exercise=\"ex_1\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 3\n\nThe columns **names** should go **to** a column called `mandate`:\n\n```r\nkansas_covid_longer <- kansas_covid |>\n  pivot_longer(\n    cols = !date,\n    names_to = \"mandate\",\n    values_to = ___\n  )\n```\n:::\n:::\n\n::: { .solution exercise=\"ex_1\" }\n::: { .callout-tip collapse=\"false\"}\n## Solution\n\nThe **values** should go **to** a column called `cases`:\n\n```r\nkansas_covid_longer <- kansas_covid |>\n  pivot_longer(\n    cols = !date,\n    names_to = \"mandate\",\n    values_to = \"cases\"\n  )\n\nkansas_covid_longer\n```\n\n:::\n:::\n\n:::\n\nNow that our data is in the correct shape, let's also address the data type of the `date` variable.\n\n::: exercise\nTransform the `date` column of the `kansas_covid_longer` data frame to be a variable that R recognizes as a date.\nSave the resulting data frame with the updated date variable as `kansas_covid_longer` again.\n\n\n::: {.cell setup='true' exercise='ex_2'}\n```{webr}\n#| setup: true\n#| exercise: ex_2\nkansas_covid_longer <- kansas_covid |>\n  pivot_longer(\n    cols = !date,\n    names_to = \"mandate\",\n    values_to = \"cases\"\n  )\n```\n:::\n\n::: {.cell exercise='ex_2'}\n```{webr}\n#| exercise: ex_2\nkansas_covid_longer <- kansas_covid_longer |>\n  # add code here\n\nkansas_covid_longer\n```\n:::\n\n\n::: { .hint exercise=\"ex_2\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 1\n\nYou can use the `mdy()` function from the **lubridate** package which is already loaded with **tidyverse**.\n:::\n:::\n\n::: { .hint exercise=\"ex_2\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 2\n\nYou're transforming a column, so use the `mutete()` function.\n\n:::\n:::\n\n::: { .hint exercise=\"ex_2\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 3\n\nPutting the first two hints together:\n\n```r\nkansas_covid_longer <- kansas_covid |>\n  ___(date = ___(date))\n```\n:::\n:::\n\n::: { .solution exercise=\"ex_2\" }\n::: { .callout-tip collapse=\"false\"}\n## Solution\n\n```r\nkansas_covid_longer <- kansas_covid_longer |>\n  mutate(date = mdy(date))\n\nkansas_covid_longer\n```\n\n:::\n:::\n\n:::\n\nOur data frame is ready to be plotted!\nNext, we'll use `ggplot()`, and the appropriate geom function to make our new graph.\n\n::::: exercise\nRecreate a slightly improved version of the original plot with `date` on the x-axis, `cases` on the y-axis, and data represented in lines colored by `mandate`.\n\n\n::: {.cell setup='true' exercise='[\"ex_3\",\"ex_4\"]'}\n```{webr}\n#| setup: true\n#| exercise:\n#|   - ex_3\n#|   - ex_4\nkansas_covid_longer <- kansas_covid |>\n  pivot_longer(\n    cols = !date,\n    names_to = \"mandate\",\n    values_to = \"cases\"\n  ) |>\n  mutate(date = mdy(date))\n```\n:::\n\n::: {.cell exercise='ex_3'}\n```{webr}\n#| exercise: ex_3\n#| fig-asp: 0.5\nggplot(\n  kansas_covid_longer,\n  aes(x = ___ , y = ___ , color = ___, group = ___)\n  ) +\n  ___\n```\n:::\n\n\n::: { .hint exercise=\"ex_3\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 1\n\nPlease see the [ggplot2 function reference](https://ggplot2.tidyverse.org/reference/) for help with determining the appropriate geom for making a line plot.\n:::\n:::\n\n::: { .hint exercise=\"ex_3\"}\n::: { .callout-note collapse=\"false\"}\n## Hint 2\n\nThe appropriate geom is `geom_line()`:\n\n```r\nggplot(\n  kansas_covid_longer,\n  aes(x = ___ , y = ___ , color = ___, group = ___)\n  ) +\n  geom_line()\n```\n\n:::\n:::\n\n::: { .solution exercise=\"ex_3\" }\n::: { .callout-tip collapse=\"false\"}\n## Solution\n\nPutting everything together together:\n\n```r\nggplot(\n  kansas_covid_longer,\n  aes(x = date , y = cases , color = mandate, group = mandate)\n  ) +\n  geom_line()\n```\n:::\n:::\n\n\n:::::\n\n:::: exercise\nUsing our new visualization, what proper conclusion can we make?\n\n::: {.callout-tip collapse=\"true\"}\n## Discussion\n\nBased on our new graph, we can see the Kansas COVID-19 7 day rolling averages per/100k between the dates of July 12, 2020 through August 3, 2020 decreased for the mask mandated counties, and stayed relatively consistent for the non-masked mandated counties.\nWe can also see that within this date range, the non-mask mandated counties had a lower rolling average per/100k than masked mandated counties.\n:::\n::::\n\nNext, let's improve the visualization further:\n\n- Use `scale_color_manual()` to change the colors of the lines associated with the `mandate` variable.\n- Use `scale_x_date()`to change the breaks and labels of the x-axis.\n- Use `labs()` to modify a axis labels and the label of the legend as well as add a  `title` and a `subtitle`.\n- Use `theme_bw()` to make the plot black-and-white themed.\n- Move the legend inside of the plot, 90% of the way on the x-axis and 80% of the way on the y-axis, and draw a gray rectangle around it.\n\n::: exercise\nRun the code below to generate the plot with the improvements described above.\nThen, modify various pieces of the code and re-run it to observe the effect and to help you understand what each function does.\n\n\n::: {.cell exercise='ex_4'}\n```{webr}\n#| exercise: ex_4\n#| fig-asp: 0.5\nggplot(\n  kansas_covid_longer,\n  aes(x = date , y = cases , color = mandate)\n  ) +\n  geom_line(linewidth = 1) +\n  scale_color_manual(\n    values = c(\n      \"mask mandate\" = \"#E69F00\", \n      \"no-mask mandate\" = \"#0072B2\"\n    )\n  ) +\n  scale_x_date(\n    date_labels = \"%b %d\", \n    date_breaks = \"2 days\"\n  ) + \n  labs(\n    x = \"Date\",\n    y = \"Number of cases\",\n    color = \"Mandate\",\n    title = \"Kansas COVID-19 7 day rolling averages per/100k\",\n    subtitle = \"July 12, 2020 through August 3, 2020\"\n  ) +\n  theme_bw() +\n  theme(\n    legend.position = \"inside\",\n    legend.position.inside = c(0.9, 0.8),\n    legend.background = element_rect(color = \"gray\")\n  )\n```\n:::\n\n\n:::\n\n# COVID-19 in Georgia",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}